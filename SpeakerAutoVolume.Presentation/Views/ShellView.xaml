<Controls:MetroWindow x:Class="SpeakerAutoVolume.Presentation.ShellView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:local="clr-namespace:SpeakerAutoVolume.Presentation"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                      xmlns:cal="http://www.caliburnproject.org"
                      xmlns:p="clr-namespace:SpeakerAutoVolume.Presentation.Properties"
                      mc:Ignorable="d"
                      Title="{x:Static p:Resources.Title}"
                      Width="1920"
                      Height="1080"
                      TitleCaps="False"
                      WindowState="{Binding WindowState, Mode=OneWay}">
    <Controls:MetroWindow.Resources>
        <Style x:Key="CustomFlyoutStyle"
               BasedOn="{StaticResource {x:Type Controls:Flyout}}"
               TargetType="{x:Type Controls:Flyout}">
            <Setter Property="Header"
                    Value="{Binding Header}" />
            <Setter Property="IsOpen"
                    Value="{Binding IsOpen}" />
            <Setter Property="Position"
                    Value="{Binding Position}" />
            <Setter Property="Theme"
                    Value="{Binding Theme}" />
        </Style>
    </Controls:MetroWindow.Resources>
    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl x:Name="FlyoutViewModels"
                                 ItemContainerStyle="{StaticResource CustomFlyoutStyle}" />
    </Controls:MetroWindow.Flyouts>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width=".2*" />
            <ColumnDefinition Width=".2*" />
            <ColumnDefinition Width=".05*" />
            <ColumnDefinition Width=".2*" />
            <ColumnDefinition Width=".2*" />
            <ColumnDefinition Width=".05*" />
            <ColumnDefinition Width=".5*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width=".6*" />
            <ColumnDefinition Width=".6*" />
            <ColumnDefinition Width=".3*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Label Content="{x:Static p:Resources.To}"
               Style="{DynamicResource DescriptionHeaderStyle}"
               FontSize="15"
               Grid.Column="4"
               Grid.ColumnSpan="2"
               Grid.RowSpan="1"
               Margin="2,2,2,100" />
        <Label Content="{x:Static p:Resources.Volume}"
               Style="{DynamicResource DescriptionHeaderStyle}"
               FontSize="15"
               Grid.Column="7"
               Grid.RowSpan="1"
               Grid.ColumnSpan="1"
               Margin="2,2,2,100" />
        <Label Content="{x:Static p:Resources.ScheduleName}"
               Visibility="{Binding VisibilityLabel, Converter={StaticResource BooleanToVisibilityConverter}}"
               Style="{DynamicResource DescriptionHeaderStyle}"
               FontSize="15"
               Grid.Column="9"
               Grid.ColumnSpan="1"
               Margin="2,2,2,100" />
        <Label Content="{x:Static p:Resources.ScheduleDetail}"
               Visibility="{Binding VisibilityLabel, Converter={StaticResource BooleanToVisibilityConverter}}"
               Style="{DynamicResource DescriptionHeaderStyle}"
               FontSize="15"
               Grid.Column="10"
               Grid.ColumnSpan="1"
               Margin="2,2,2,100" />
        <ListBox ItemsSource="{Binding ListHour, Mode=OneWay}"
                 SelectedItem="{Binding Path=SelectedFromHour, Mode=OneWayToSource}"
                 IsEnabled="{Binding IsEnableTimeRangeControls}"
                 DisplayMemberPath="SpeakerAutoVolumeHour"
                 FontSize="15"
                 BorderThickness="0"
                 SelectedIndex="0"
                 BorderBrush="#FF119EDA"
                 Margin="2,32,2,16"
                 Grid.RowSpan="3"
                 Grid.Column="1"
                 cal:Message.Attach="[Event SelectionChanged] = [Action ActionSelectionChangedTimeRange()]" />
        <ListBox ItemsSource="{Binding ListMinute, Mode=OneWay}"
                 IsEnabled="{Binding IsEnableTimeRangeControls}"
                 SelectedItem="{Binding Path=SelectedFromMinute, Mode=OneWayToSource}"
                 BorderThickness="0"
                 DisplayMemberPath="SpeakerAutoVolumeMinute"
                 SelectedIndex="0"
                 FontSize="15"
                 Grid.RowSpan="3"
                 Margin="2,32,2,16"
                 Grid.Column="2"
                 cal:Message.Attach="[Event SelectionChanged] = [Action ActionSelectionChangedTimeRange()]" />
        <ListBox ItemsSource="{Binding ListHour, Mode=OneWay}"
                 SelectedItem="{Binding Path=SelectedToHour, Mode=OneWayToSource}"
                 IsEnabled="{Binding IsEnableTimeRangeControls}"
                 DisplayMemberPath="SpeakerAutoVolumeHour"
                 FontSize="15"
                 BorderThickness="0"
                 SelectedIndex="0"
                 Margin="2,32,2,16"
                 Grid.RowSpan="3"
                 Grid.Column="4"
                 cal:Message.Attach="[Event SelectionChanged] = [Action ActionSelectionChangedTimeRange()]" />
        <ListBox ItemsSource="{Binding ListMinute, Mode=OneWay}"
                 SelectedItem="{Binding Path=SelectedToMinute, Mode=OneWayToSource}"
                 IsEnabled="{Binding IsEnableTimeRangeControls}"
                 BorderThickness="0"
                 DisplayMemberPath="SpeakerAutoVolumeMinute"
                 SelectedIndex="0"
                 FontSize="15"
                 Grid.RowSpan="3"
                 Margin="2,32,2,16"
                 Grid.Column="5"
                 cal:Message.Attach="[Event SelectionChanged] = [Action ActionSelectionChangedTimeRange()]" />
        <ListBox ItemsSource="{Binding ListVolume, Mode=OneWay}"
                 SelectedItem="{Binding SelectedVolume, Mode=OneWayToSource}"
                 IsEnabled="{Binding IsEnableTimeRangeControls}"
                 DisplayMemberPath="SpeakerVolume"
                 SelectedIndex="0"
                 BorderThickness="0"
                 FontSize="15"
                 Margin="0,32,0,16"
                 Grid.RowSpan="3"
                 Grid.Column="7" />
        <ListBox ItemsSource="{Binding ListSchedule, Mode=TwoWay}"
                 Style="{StaticResource VirtualisedMetroListBox}"
                 IsEnabled="{Binding IsEnabledScheduleName}"
                 SelectedItem="{Binding Path=SelectedSchedule, Mode=TwoWay}"
                 SelectedIndex="0"
                 BorderThickness="0"
                 Margin="4,32,4,32"
                 Grid.Column="9"
                 Grid.RowSpan="3"
                 FontSize="15"
                 cal:Message.Attach="[Event SelectionChanged] = [Action ActionSelectionChangedListSchedule()]" />
        <ListBox ItemsSource="{Binding ListScheduleDetail, Mode=TwoWay}"
                 Style="{StaticResource VirtualisedMetroListBox}"
                 SelectedItem="{Binding Path=SelectedScheduleDetail, Mode=TwoWay}"
                 SelectedIndex="0"
                 BorderThickness="0"
                 Margin="4,32,4,32"
                 Grid.Column="10"
                 Grid.RowSpan="3"
                 FontSize="15"
                 cal:Message.Attach="[Event SelectionChanged] = [Action ActionSelectionChangedListScheduleDetail()]">
        </ListBox>
        <TextBox Text="{Binding TextError}"
                 Visibility="{Binding VisibilityTextBoxError, Converter={StaticResource BooleanToVisibilityConverter}}"
                 BorderBrush="Red"
                 IsEnabled="False"
                 TextWrapping="Wrap"
                 BorderThickness="3"
                 TextAlignment="Center"
                 FontSize="18"
                 FontWeight="Bold"
                 Grid.Column="8"
                 Grid.Row="0"
                 Grid.RowSpan="2"
                 Margin="8,170,8,128" />
        <Button Visibility="{Binding VisibilityButtonSave, Converter={StaticResource BooleanToVisibilityConverter}}"
                Width="64"
                Height="64"
                Margin="10,0,10,0"
                Grid.Column="8"
                Grid.RowSpan="2"
                Grid.Row="1"
                BorderBrush="{x:Null}"
                Background="{x:Null}"
                BorderThickness="0"
                cal:Message.Attach="[Event Click] = [Action ActionSave()]">
            <iconPacks:PackIconFontAwesome Kind="AngleDoubleRightSolid"
                                           Width="32"
                                           Height="32" />
        </Button>
        <Controls:ToggleSwitch IsChecked="{Binding IsCheckedToggleSwitch, Mode=TwoWay}"
                               Name="SwitchOnOff"
                               IsEnabled="{Binding IsEnabledToggleSwitch}"
                               Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}"
                               OffLabel=""
                               OnLabel=""
                               Width="64"
                               Height="32"
                               Grid.Row="0"
                               Grid.Column="0"
                               Grid.RowSpan="2"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               cal:Message.Attach="[Event Checked] = [Action ActionSwitch(SwitchOnOff.IsChecked)]; 
                               [Event Unchecked] = [Action ActionSwitch(SwitchOnOff.IsChecked)]" />
        <Button Visibility="{Binding VisibilityButtonScheduleDetail, Converter={StaticResource BooleanToVisibilityConverter}}"
                Style="{StaticResource FlatButton}"
                BorderThickness="0"
                Width="64"
                Height="64"
                Margin="4,96,4,4"
                Grid.Column="12"
                Grid.Row="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                cal:Message.Attach="[Event Click] = [Action ActionDeleteScheduleDetail()]">
            <iconPacks:PackIconFontAwesome Kind="MinusCircleSolid"
                                           Width="32"
                                           Height="32" />
        </Button>
        <Button Visibility="{Binding VisibilityButtonDeleteSchedule, Converter={StaticResource BooleanToVisibilityConverter}}"
                Style="{StaticResource FlatButton}"
                BorderThickness="0"
                Width="64"
                Height="64"
                Margin="4,96,0,0"
                Grid.Column="8"
                Grid.Row="0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                cal:Message.Attach="[Event Click] = [Action ActionToggleConfirmDeleteScheduleFlyout()]">
            <iconPacks:PackIconFontAwesome Kind="MinusCircleSolid"
                                           Width="32"
                                           Height="32" />
        </Button>
        <Button Visibility="{Binding VisibilityButtonAddSchedule, Converter={StaticResource BooleanToVisibilityConverter}}"
                Style="{StaticResource FlatButton}"
                BorderThickness="0"
                Width="64"
                Height="64"
                Margin="4,32,0,0"
                Grid.Column="8"
                Grid.Row="0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                cal:Message.Attach="[Event Click] = [Action ActionAddSchedule()]">
            <iconPacks:PackIconFontAwesome Kind="PlusCircleSolid"
                                           Width="32"
                                           Height="32" />
        </Button>
        <CheckBox IsChecked="{Binding IsCheckedStartsWithWindows, Mode=TwoWay}"
                  Name="StartsWithWindows"
                  Content="{x:Static p:Resources.StartsWithWindows}"
                  FontSize="15"
                  Grid.Column="0"
                  Height="32"
                  Grid.ColumnSpan="1"
                  Grid.RowSpan="2"
                  Margin="4,0,4,0"
                  VerticalAlignment="Bottom"
                  cal:Message.Attach="[Event Checked] = [Action ActionStartsWithWindows(StartsWithWindows.IsChecked)]; 
                               [Event Unchecked] = [Action ActionStartsWithWindows(StartsWithWindows.IsChecked)]" />
        <CheckBox IsChecked="{Binding IsCheckedStubbornMode}"
                  IsEnabled="{Binding IsEnabledToggleSwitch}"
                  Name="StubbornMode"
                  Content="{x:Static p:Resources.StubbornMode}"
                  FontSize="15"
                  Grid.Column="0"
                  Grid.Row="3"
                  Height="32"
                  Grid.ColumnSpan="1"
                  Grid.RowSpan="2"
                  Margin="4,0,4,0"
                  VerticalAlignment="Top"
                  cal:Message.Attach="[Event Checked] = [Action ActionStubbornMode(StubbornMode.IsChecked)]; 
                               [Event Unchecked] = [Action ActionStubbornMode(StubbornMode.IsChecked)]" />
        <Label Content="{x:Static p:Resources.From}"
               Style="{DynamicResource DescriptionHeaderStyle}"
               FontSize="15"
               Grid.ColumnSpan="2"
               Grid.RowSpan="1"
               Margin= "2,2,2,100"
               Grid.Column="1" />
    </Grid>
</Controls:MetroWindow>
